{"version":3,"sources":["webpack:///src/app/members/dashboard/scan-barcode-job/scan-barcode-job.page.html","webpack:///src/app/members/dashboard/scan-barcode-job/scan-barcode-job.page.scss","webpack:///src/app/members/dashboard/scan-barcode-job/scan-barcode-job.module.ts","webpack:///src/app/members/dashboard/scan-barcode-job/scan-barcode-job.page.ts"],"names":["routes","path","component","ScanBarcodeJobPageModule","imports","forChild","declarations","ScanBarcodeJobPage","api","barcodeScanner","toast","storage","router","route","loadingController","toastController","barcodePush","connote_new","scan","options","prompt","disableSuccessBeep","resultDisplayDuration","saveHistory","showTorchButton","showFlipCameraButton","then","barcodeData","barcode","text","cancelled","console","log","push","set","JSON","stringify","alert","sendData","err","show","subscribe","duplicate","i","length","create","loading","present","get","val","emp_key","createJob","res","result","dismiss","message","duration","selector","template"],"mappings":"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","file":"dashboard-scan-barcode-job-scan-barcode-job-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar class=\\\"header\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>แสกนบาร์โคด Connote ส่งของ</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\t<form #form=\\\"ngForm\\\" (ngSubmit)=\\\"submitForm()\\\" >\\n\\t\\t<ion-grid >\\n\\t        <ion-row>\\n\\t        \\t<ion-col size=\\\"12\\\">\\n\\t\\t          \\t<ion-item>\\n\\t\\t\\t\\t\\t  <ion-input [(ngModel)]=\\\"barcode\\\" name=\\\"barcode\\\" type=\\\"text\\\" placeholder=\\\"หมายเลขบาร์โค้ด\\\" required></ion-input>\\n\\t\\t\\t\\t\\t</ion-item>\\n\\t        \\t</ion-col>\\n\\t        </ion-row>\\n\\t        <ion-row>\\n\\t        \\t<ion-col size=\\\"12\\\">\\n\\t\\t\\t\\t\\t  <ion-button expand=\\\"full\\\" type=\\\"submit\\\" color=\\\"primary\\\" [disabled]=\\\"form.invalid\\\" >ยืนยัน บาร์โค้ด</ion-button>\\n\\t        \\t</ion-col>\\n\\t        </ion-row>\\n\\t    </ion-grid>\\n\\t</form>\\n\\t<ion-item *ngFor=\\\"let result of barcodePush\\\">\\n\\t\\t<ion-row>\\n        \\t<ion-col size=\\\"12\\\">\\n\\t\\t\\t\\t<ion-label>{{result}}</ion-label>\\n        \\t</ion-col>\\n        </ion-row>\\n    </ion-item>\\n</ion-content>\\n\";","export default \".header {\\n  padding: 20px 0;\\n  --background: #3f51b5;\\n}\\n\\n.header ion-title,\\n.header ion-back-button {\\n  color: #fff;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWVtYmVycy9kYXNoYm9hcmQvc2Nhbi1iYXJjb2RlLWpvYi9zY2FuLWJhcmNvZGUtam9iLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNDLGVBQUE7RUFDQSxxQkFBQTtBQUNEOztBQUNBOztFQUVDLFdBQUE7QUFFRCIsImZpbGUiOiJzcmMvYXBwL21lbWJlcnMvZGFzaGJvYXJkL3NjYW4tYmFyY29kZS1qb2Ivc2Nhbi1iYXJjb2RlLWpvYi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyIHtcclxuXHRwYWRkaW5nOiAyMHB4IDA7XHJcblx0LS1iYWNrZ3JvdW5kOiAjM2Y1MWI1O1xyXG59XHJcbi5oZWFkZXIgaW9uLXRpdGxlLFxyXG4uaGVhZGVyIGlvbi1iYWNrLWJ1dHRvbiB7XHJcblx0Y29sb3I6ICNmZmY7XHJcbn0iXX0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ScanBarcodeJobPage } from './scan-barcode-job.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScanBarcodeJobPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ScanBarcodeJobPage]\n})\nexport class ScanBarcodeJobPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LoadingController } from '@ionic/angular';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\nimport { Toast } from '@ionic-native/toast/ngx';\nimport { Storage } from '@ionic/storage';\nimport { ToastController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { RestApiService } from '../../../rest-api.service';\n\n@Component({\n  selector: 'app-scan',\n  templateUrl: './scan-barcode-job.page.html',\n  styleUrls: ['./scan-barcode-job.page.scss'],\n})\nexport class ScanBarcodeJobPage implements OnInit {\n  emp_key:any;\n  barcode: any;\n  textPrint:any;\n  barcodePush:any=[];\n  connote_new:any=[];\n  options:any;\n  constructor(\n    public api: RestApiService,\n    private barcodeScanner: BarcodeScanner,\n    private toast: Toast,\n    private storage: Storage,\n    public router: Router,\n    public route: ActivatedRoute,\n    public loadingController: LoadingController,\n    public toastController: ToastController) { }\n\n  ngOnInit() {\n  \tthis.scan();\n  }\n  \n  scan() {\n    this.options = {\n      // formats: \"QR_CODE\",\n      prompt : \"Place a barcode inside the scan area\",\n      // orientation : \"landscape\",\n      disableSuccessBeep: false,\n      resultDisplayDuration: 500,\n      saveHistory: true,\n      // torchOn: true,\n      showTorchButton : true,\n      showFlipCameraButton : true,\n      // preferFrontCamera : false\n    }\n  \tthis.barcodeScanner.scan(this.options).then((barcodeData) => {\n  \t\tthis.barcode = barcodeData.text;\n      if (barcodeData.cancelled) {\n        console.log(\"User cancelled the action!\");\n        return false;\n      }\n      if(this.barcode!=''){\n        this.barcodePush.push(this.barcode);\n        // console.log(this.barcodePush);\n        this.storage.set('keyOfDataJob', JSON.stringify(this.barcodePush));\n        this.alert(this.barcode);\n        this.connote_new.push(this.barcode);\n        \n        this.sendData(this.barcode);\n\n      }\n      this.scan();\n      // this.barcode = '';\n  \t}, (err) => {\n    \tthis.toast.show(err, '5000', 'center').subscribe(\n\t      toast => {\n\t        console.log(toast);\n\t      }\n\t    );\n\t  });\n  }\n  \n  \n  async submitForm(){\n    if(this.barcode!=''){\n      this.sendData(this.barcode);\n      // this.barcodePush.push(this.barcode);\n      // // this.barcodePush.push(this.barcode);\n      // // this.storage.set('keyOfDataJob', JSON.stringify(this.barcodePush));\n      // // // this.alert(this.barcode);\n      // // this.connote_new.push(this.barcode);\n\n      // // Start \n      // this.storage.get('emp_key').then((val) => {\n      //   this.emp_key = val.toString();\n      // });\n      // const loading = await this.loadingController.create({\n      // // content: 'Loading'\n      // });\n      // await loading.present();\n      // await this.api.createJob(this.barcode,this.emp_key)\n      // .subscribe(res => {\n      //   console.log(res);\n      //   // this.barcodePush.push(this.barcode);\n      //   // alert(res.result);\n      //   this.alert(res.result);\n\n      //   // this.getJobDetail();\n      //   loading.dismiss();\n      //   // this.router.navigateByUrl('/members/dashboard/job');\n      //   // this.router.navigate(['/members/dashboard/job']);\n      // }, err => {\n      //   console.log(err);\n      //   loading.dismiss();\n      // });\n      // // End\n\n      // // console.log(this.connote_new);\n      // this.barcode = '';\n    }\n\n\n    \n\n\n    // this.storage.get('keyOfDataJob').then((val) => {\n    //   if(val!=''){\n    //     this.connote_new = JSON.parse(val);\n    //   }\n    // });\n  \t// this.toast.show('Submit', '200', 'center').subscribe(\n   //    toast => {\n   //      // console.log(toast);\n   //    }\n   //  );\n   // this.storage.get('keyOfDataJob').then((val) => {\n   //    console.log(val);\n   //    // this.textPrint = JSON.parse(val);\n   //  });\n  }\n  async sendData(barcode){\n    var duplicate = false;  \n    for (var i = 0; i <= this.barcodePush.length - 1; i++) {\n      if(this.barcodePush[i]==this.barcode){\n        duplicate = true;\n      }\n    }\n    if(duplicate){\n\n    }else{\n\n\n    const loading = await this.loadingController.create({\n    \n    });\n    await loading.present();\n    // Start \n    this.storage.get('emp_key').then((val) => {\n      this.emp_key = val;\n      this.api.createJob(barcode,this.emp_key).subscribe(res => {\n        console.log(res);\n        // alert(res.result);\n        this.alert(res.result);\n        this.barcodePush.push(this.barcode);\n        // this.barcodePush.push(barcode);\n        // this.getJobDetail();\n        loading.dismiss();\n        // this.router.navigateByUrl('/members/dashboard/job');\n        // this.router.navigate(['/members/dashboard/job']);\n      }, err => {\n        console.log(err);\n        loading.dismiss();\n      });\n    });\n    \n   }\n    // End\n  }\n  removeBarcode(){\n    this.storage.set('keyOfDataJob', '');\n  }\n  async alert(result){\n     const toast = await this.toastController.create({\n          message: 'Add connote '+result,\n          duration: 2000\n        });\n\n        toast.present();\n   }\n   \n}\n"]}